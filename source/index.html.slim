---
id: "index"
layout: "layout"
title: "新規サイト"
keywords: ""
description: ""
---

/
/ Index
/

div#routemap
  svg xmlns="http://www.w3.org/2000/svg" data-bind="attr: { width: width, height: height, viewBox: viewBox }" preserveAspectRatio="xMinYMin"
    g data-bind="foreach: lines.data"
      a data-bind="attr: { 'xlink:href': '#' + name() }" fill="none"
        /! ###ko if: hasStatus()
        path.subline stroke-linecap="round" stroke-linejoin="round" data-bind="attr: { id: 'path' + id(), d: path, stroke: subColor, 'stroke-width': subStrokeWidth }, event: { mouseover: mouseOverPath, mouseout: mouseOutPath }"
        /! ###/ko
        path.mainline stroke-linecap="round" stroke-linejoin="round" pointer-events="none" data-bind="attr: { id: 'path' + id(), d: path, stroke: mainColor, 'stroke-width': mainStrokeWidth }"
    g data-bind="foreach: stations.data"
      /! ko if: switchVisibility()
      //circle.station-point fill="#FFF" data-bind="attr: { cx: x, cy: y, r: r }"
      path stroke="#FFF" fill="#FFF" stroke-linecap="round" stroke-linejoin="round" data-bind="attr: { d: getPointPath(), 'stroke-width': getStrokeWidth() }"
      text.station-label text-anchor="middle" data-bind="text: name, attr: { x: x, y: getLabelY(), 'font-size': getFontSize() }"
      /! /ko
    /circle r="3" data-bind="attr: { cx: mapControl.avaterX(), cy: mapControl.avaterY() }"
    /g / for test
      - 150.times do |i|
        - color = i % 10 === 0 ? "#FCC" : "#CCC"
        - width = i % 10 === 0 ? "2" : "1"
        path d="M#{10 * i},0 L#{10 * i},1000" stroke="#{color}" stroke-width="#{width}"
      - 100.times do |i|
        - color = i % 10 === 0 ? "#FCC" : "#CCC"
        - width = i % 10 === 0 ? "2" : "1"
        path d="M0,#{10 * i} L1500, #{10 * i}" stroke="#{color}" stroke-width="#{width}"

  /#debug
    p data-bind="text: 'VB:' + dumpViewBox()"
    p data-bind="text: 'IB:' + dumpInnerWindow()"
    p data-bind="text: 'Pixel ratio:' + dumpDevicePixelRatio()"


#popup.popup-container data-bind="style: { left: left, top: top }"
  .popup-container-wrapper.line-display data-bind="style: { 'border-color': color }, css: { 'line--has-info': status().key !== 'normal' }"
    p.line-status data-bind="style: { color: status().color }"
      span.line-status-icon
        span data-bind="if: status().key === 'normal'"
          i.fa.fa-check
        span data-bind="if: status().key === 'info'"
          i.fa.fa-info-circle
        span data-bind="if: status().key === 'delay'"
          i.fa.fa-warning
        span data-bind="if: status().key === 'suspend'"
          i.fa.fa-minus-circle
        span data-bind="if: status().key === 'restart'"
          i.fa.fa-refresh
      span.line-status-label data-bind="text: status().label, style: { background: status().color }"
    p.line-title data-bind="text: name"
    p.line-msg data-bind="text: content"

#mapcontrol
  /p data-bind="text: scale"
  / Horizontal Slider
  /#map-slider-horizontal
    .scale-slider
      span.scale-slider-icon.scale-slider-ico-wide
        i.fa.fa-tree
      span.scale-slider-groove
      span.scale-slider-handle data-bind="style: { left: handle().left, top: handle().top }"
        i.fa.fa-bars
      span.scale-slider-icon.scale-slider-ico-tele
        i.fa.fa-tree
        i.fa.fa-tree
        i.fa.fa-tree
      /! ko if: nowScaleChange
      span.scale-silder-display
        | &times;
        span.scale-silder-display-amount data-bind="text: scale"
      /! /ko
  / Virtical Slider
  #map-slider-vertical
    .scale-slider.scale-slider--vertical
      span.scale-slider-icon.scale-slider-ico-wide
        i.fa.fa-tree
      span.scale-slider-groove
      span.scale-slider-handle data-bind="style: { left: handle().left, top: handle().top }"
        i.fa.fa-bars
      span.scale-slider-icon.scale-slider-ico-tele
        i.fa.fa-tree
        i.fa.fa-tree
        i.fa.fa-tree
      /! ko if: nowScaleChange
      span.scale-silder-display
        | &times;
        span.scale-silder-display-amount data-bind="text: scale"
      /! /ko
  .minimap
    .minimap-init data-bind="style: { width: minimap.svgWidth() + 'px', height: minimap.svgHeight() + 'px' }"
      .minimap-current data-bind="style: { left: minimap.x() + 'px', top: minimap.y() + 'px', width: minimap.width() + 'px', height: minimap.height() + 'px' }"

#clock
  svg xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin"
    circle stroke="#333" fill="none" data-bind="attr: { cx: size / 2, cy: size / 2, r: (size - thickness) / 2, 'stroke-width': thickness }"
    path stroke="#999" fill="none" data-bind="attr: { d: getPath(), 'stroke-width': thickness }"
    text text-anchor="middle" data-bind="text: getDisplayTime()" font-size="16" x="20" y="26" fill="#999"

#updates
  nav.update-nav-bar
    ul
      li.update-nav-item
        .update-nav-search-box
          label
            | キーワード
          input type="text" placeholder="渋谷" data-bind="value: keyword, valueUpdate: 'afterinput'"
        a.update-nav-btn.update-search-nav-btn href="javascript:void(0);" data-bind="event: { click: match }"
          span.update-nav-icon
            i.fa.fa-search
      li.update-nav-item
        a.update-nav-btn href="javascript:void(0);" data-bind="event: { click: all }"
          span.update-nav-icon
            i.fa.fa-circle-o
          span.update-nav-label
            | すべて
      li.update-nav-item
        a.update-nav-btn href="javascript:void(0);" data-bind="event: { click: hasInfo }"
          span.update-nav-icon
            i.fa.fa-filter
          span.update-nav-label
            | 情報あり
  #updates-list
    ul data-bind="foreach: filtered"
      li.update-container.line-display data-bind="style: { 'border-color': color }, css: { 'line--has-info': status().key !== 'normal' }"
        p.line-status data-bind="style: { color: status().color }"
          span.line-status-icon
            span data-bind="if: status().key === 'normal'"
              i.fa.fa-check
            span data-bind="if: status().key === 'info'"
              i.fa.fa-info-circle
            span data-bind="if: status().key === 'delay'"
              i.fa.fa-warning
            span data-bind="if: status().key === 'suspend'"
              i.fa.fa-minus-circle
            span data-bind="if: status().key === 'restart'"
              i.fa.fa-refresh
          span.line-status-label data-bind="text: status().label, style: { background: status().color }"
        p.line-title data-bind="text: name"
        p.line-msg data-bind="text: content"
  nav.updates-bottom-bar data-bind="css: { 'update-nav-bar--open': isShow }"
    ul
      li.update-toggle-nav data-bind="event: { click: toggle }, css: { 'update-toggle-nav--open': isShow }"
        span.updates-icon
          i.fa.fa-plus

